# Development-specific overrides and additions
# Use with: docker compose -f docker-compose.base.yml -f docker-compose.dev.yml up

services:
  # ===== CORE SERVICES (DEV OVERRIDES) =====
  
  # Development database overrides
  db:
    volumes:
      # Add dev-specific init script
      - ./database/init-dev.sql:/docker-entrypoint-initdb.d/02-init-dev.sql:ro
    ports:
      # Expose database port for direct access
      - "5432:5432"

  # Development API overrides
  api:
    ports:
      # Expose API port for direct access
      - "5000:5000"

  # Development frontend overrides
  frontend:
    ports:
      # Expose frontend port
      - "3000:3000"

  # Development Trivy overrides
  trivy:
    ports:
      # Expose trivy port for direct access
      - "${TRIVY_PORT}:${TRIVY_PORT}"

  # ===== DEVELOPMENT-ONLY SERVICES =====
  
  # Mock Identity Provider (for development)
  mock-idp:
    build:
      context: ./mock-idp
      dockerfile: Dockerfile
    env_file:
      - example.env.development
    ports:
      - "8081:8081"
    networks:
      - app-network

  # Mock NPM Registry (for development)
  mock-npm-registry:
    build:
      context: ./mock-npm-registry
      dockerfile: Dockerfile
    environment:
      - PORT=8080
    ports:
      - "8080:8080"
    volumes:
      - npm_storage:/app/storage
    networks:
      - app-network

  # ===== DEVELOPMENT TOOLS =====
  
  # pgAdmin for database management (development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${DEFAULT_ADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${DEFAULT_ADMIN_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json:ro
    networks:
      - app-network
    depends_on:
      - db
    restart: unless-stopped

  # Portainer for Docker management UI (development only)
  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - app-network
    restart: unless-stopped

volumes:
  # Add dev-specific volumes
  npm_storage:
  pgadmin_data:
  portainer_data: