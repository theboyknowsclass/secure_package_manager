import React from "react";
import { Box, Typography } from "@mui/material";
import { ScanResult } from "../../types/package";
import { getTotalVulnerabilities } from "../../utils/scanUtils";

export interface VulnerabilityChipProps {
  scanResult?: ScanResult | null;
  showDetails?: boolean;
}

export const VulnerabilityChip: React.FC<VulnerabilityChipProps> = React.memo(({
  scanResult,
  showDetails = true,
}) => {
  // Calculate total vulnerabilities from granular counts
  const totalVulnerabilities = getTotalVulnerabilities(scanResult || null);

  if (totalVulnerabilities === 0) {
    return (
      <Typography variant="body2" color="success">
        None
      </Typography>
    );
  }

  if (!showDetails) {
    return (
      <Typography variant="body2" color="error">
        {totalVulnerabilities}
      </Typography>
    );
  }

  return (
    <Box>
      <Typography variant="body2" color="error">
        {totalVulnerabilities} total
      </Typography>
      {scanResult && scanResult.critical_count > 0 && (
        <Typography variant="caption" color="error">
          {scanResult.critical_count} critical
        </Typography>
      )}
    </Box>
  );
});

export default VulnerabilityChip;
